name: Build Status

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os:
            - ubuntu-24.04 # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
            - macos-14 # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-arm64-Readme.md
            - windows-2022 # https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md
          python-version:
            - "3.11"
          cibuildwheel:
            - "cp311"
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: 'true'

      - name: Setup cache (mac/linux)
        uses: actions/cache@v4
        with:
          path: "/home/runner/work/verilator-python/verilator-python/.ccache"
          key: cache-${{ runner.os }}-
          restore-keys: cache-${{ runner.os }}-
        if: ${{ runner.os != 'Windows' }}

      - name: Setup cache (windows)
        uses: actions/cache@v4
        with:
          path: "C:/ProgramData/chocolatey/"
          key: cache-${{ runner.os }}-
          restore-keys: cache-${{ runner.os }}-
        if: ${{ runner.os == 'Windows' }}

      - uses: actions-ext/python/setup@main
        with:
          version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install cibuildwheel

      - name: Python Wheel Steps (linux)
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "${{ matrix.cibuildwheel }}-manylinux*"
          CIBW_ENVIRONMENT_LINUX: CCACHE_DIR="/host/home/runner/work/verilator-python/verilator-python/.ccache"
          CIBW_BUILD_VERBOSITY: 3
        if: ${{ runner.os == 'Linux' }}

      - name: Python Build Steps (mac)
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "${{ matrix.cibuildwheel }}-macos*"
          CIBW_ENVIRONMENT_MACOS: CCACHE_DIR="/Users/runner/work/verilator-python/verilator-python/.ccache" MACOSX_DEPLOYMENT_TARGET=11.0
          CIBW_BUILD_VERBOSITY: 3
        if: ${{ matrix.os == 'macos-14' }}

      - name: Python Build Steps (windows)
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "${{ matrix.cibuildwheel }}-win_amd64"
        if: ${{ matrix.os == 'windows-2022' }}

      - name: Upload Wheel
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}
          path: dist/*.whl

      - name: Install wheel (mac/linux)
        run: python -m pip install dist/*.whl
        if: ${{ runner.os != 'Windows' }}

      - name: Install wheel (windows)
        run: python -m pip install -U (Get-ChildItem .\dist\*.whl | Select-Object -Expand FullName)
        if: ${{ runner.os == 'Windows' }}

      - name: Install test dependencies
        run: python -m pip install pytest rich typer

      - name: Test Wheel
        run: python -m pytest -vvv verilator/tests
